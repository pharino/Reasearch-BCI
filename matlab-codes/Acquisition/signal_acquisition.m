function  varargout = signal_acquisition( varargin )
%% SignalAcquitition.m --   programmatical main function to setup a GUI
%                           for acquition off line data for BCI process
%
%%  Declare and create all the UI objects in this GUI here so that they can
%   be used in any functions
OutputArgs     =   {};      % Variable for storing output when GUI returns
%   -----------------------------------------------------------------------
%%  Main figure
figure_main                        =   figure(...       % the main GUI figure
    'MenuBar','none', ...
    'Toolbar','none', ...
    'HandleVisibility','callback', ...
    'Name', mfilename, ...
    'NumberTitle','off', ...
    'Position',[500,300,600,290],...
    'Resize','off',...
    'Color', get(0, 'defaultuicontrolbackgroundcolor'));
handles                     = guihandles(figure_main);
%   -----------------------------------------------------------------------
%%  Menu items for "main" figure
menu_file                   =   uimenu(...  % File menu
    'Parent',figure_main,...
    'HandleVisibility','callback',...
    'label','File');
menu_file_open              =   uimenu(...       % Open menu item
    'Parent',menu_file,...
    'Label','Open',...
    'HandleVisibility','callback', ...
    'Callback', @ObjectOpenMenuItemCallback);
menu_file_print             =  uimenu(...       % Print menu item
    'Parent',menu_file,...
    'Label','Print',...
    'HandleVisibility','callback', ...
    'Callback', @ObjectPrintMenuItemCallback);
menu_file_close             =  uimenu(...       % Close menu item
    'Parent',menu_file,...
    'Label','Close',...
    'Separator','on',...
    'HandleVisibility','callback', ...
    'Callback', @ObjectCloseMenuItemCallback);

%%  Main panels
panel_dataset_properties    = uipanel('Parent',figure_main,...
    'Units','pixels',...
    'Position',[5,5,590,145],...    % Wmax = 590,Vmax = 395
    'Title','Dataset Properties',...
    'TitlePosition','lefttop');
buttongroup_source          = uibuttongroup('Parent',figure_main,...
    'Units','pixels',...
    'Position',[5,150,135,135],...    % Wmax = 590,Vmax = 395
    'Title','Dataset source',...
    'TitlePosition','lefttop',...
    'SelectionChangeFcn',@buttongroup_source_SelectionChangeFcn);
panel_user_inputs           = uipanel('Parent',figure_main,...
    'Units','pixels',...
    'Position',[145,150,310,135],...    % Wmax = 590,Vmax = 395
    'Title','User Inputs',...
    'TitlePosition','lefttop');
buttongroup_command         = uibuttongroup('Parent',figure_main,...
    'Units','pixels',...
    'Position',[460,150,135,135],...    % Wmax = 590,Vmax = 395
    'Title','Command',...
    'TitlePosition','lefttop',...
    'SelectionChangeFcn',@buttongroup_command_SelectionChangeFcn);
%%  Dataset source buttongroup components
radiobutton_usir            = uicontrol(buttongroup_source,...   % Groupbutton parent
    'Style','radiobutton',...
    'String','URIS',...
    'Units','pixels',...
    'Position',[5,91,125,30]);
radiobutton_bci4            = uicontrol(buttongroup_source,...   % Groupbutton parent
    'Style','radiobutton',...
    'String','BCI IV',...
    'Units','pixels',...
    'Position',[5,48,125,30]);
radiobutton_bci3            = uicontrol(buttongroup_source,...   % Groupbutton parent
    'Style','radiobutton',...
    'String','BCI III',...
    'Units','pixels',...
    'Position',[5,5,125,30]);
%%  User inputs panel components
handles.user_input_data     = [{'Dataset'},{'Dataset1'};...
    {'Session'},{'Session1'};...
    {'Subject Name'},{'A'}];
table_user_inputs           = uitable(panel_user_inputs,...
    'Data',handles.user_input_data,...
    'Units','pixels',...
    'Position',[5,5,295,100],...
    'ColumnName',[],...
    'ColumnWidth',{145},...
    'RowName',[],...
    'ColumnEditable',[false true],...
    'CellEditCallback',@table_user_inputs_CellEditCallbackFcn);

%%  Command panel components

pushbutton_load             = uicontrol(buttongroup_command,...   % Groupbutton parent
    'Style','pushbutton',...
    'String','Load',...
    'Units','pixels',...
    'Position',[5,90,125,30],...
    'Callback',@pushbutton_load_CallbackFcn);

pushbutton_process          = uicontrol(buttongroup_command,...   % Groupbutton parent
    'Style','pushbutton',...
    'String','Process',...
    'Units','pixels',...
    'Position',[5,50,125,30],...
    'Enable','off',...
    'Callback',@pushbutton_process_CallbackFcn);
pushbutton_save             = uicontrol(buttongroup_command,...   % Groupbutton parent
    'Style','pushbutton',...
    'String','Save',...
    'Units','pixels',...
    'Position',[5,10,125,30],...
    'Enable','off',...
    'Callback',@pushbutton_save_Callback);
%% Dataset properties panel components
edit_output_name            = uicontrol(panel_dataset_properties,...
    'Style','edit',...
    'String','Output dataset name:',...
    'Units','pixels',...
    'Position',[5,105,120,20],...
    'Enable','inactive');
handles.source = 'URIS';
handles.user_input_data            = get(table_user_inputs,'Data');
handles.edit_output_name_string    = strcat(handles.source,...
    '_',handles.user_input_data(1,2),...
    '_',handles.user_input_data(2,2),...
    '_',handles.user_input_data(3,2),'.mat');
edit_name_string            = uicontrol(panel_dataset_properties,...
    'Style','edit',...
    'String',handles.edit_output_name_string,...
    'Units','pixels',...
    'Position',[130,105,455,20],...
    'Enable','inactive');

handles.table_output_data   = [ {'Sampling frequency(Hz)'},{[]},{[]};...
    {'Class label'},{[]},{[]};...
    {'Number of class output(trial)'},{[]},{[]};...
    {'Number of electrodes(unit)'},{[]},{[]}];
table_properties            = uitable(panel_dataset_properties,...
    'Data',handles.table_output_data,...
    'Units','pixels',...
    'Position',[5,0,580,100],...
    'ColumnName',[],...
    'ColumnWidth',{200,185,190},...
    'RowName',[],...
    'ColumnEditable',[false false false]);
%%  Define default output and return it if it is requested by users
OutputArgs{1} =figure_main ;
if nargout>0
    [varargout{1:nargout}] = OutputArgs{:};
end
guidata(figure_main,handles);  %   Save GUI data
%%  Callback function run when the Open menu item is selected
    function ObjectOpenMenuItemCallback(hObject, eventdata)        
        file = uigetfile('*.mat');
        if ~isequal(file, 0)
            handles = guidata(figure_main);
            handles.dataset = load(file);
            guidata(figure_main,handles);
        end
    end

%%  Callback function run when the Print menu item is selected
    function ObjectPrintMenuItemCallback(hObject, eventdata)
        printdlg(figure_main);
    end
%%  Callback function run when the Close menu item is selected
    function ObjectCloseMenuItemCallback(hObject, eventdata)
        selection = questdlg(['Close ' get(figure_main,'Name') '?'],...
            ['Close ' get(figure_main,'Name') '...'],...
            'Yes','No','Yes');
        if strcmp(selection,'No')
            return;
        end
        delete(figure_main);
    end
%%  Callback when user change value in input table
    function table_user_inputs_CellEditCallbackFcn(hObject,eventdata)
        handles = guidata(figure_main);
        handles.user_input_data = get(table_user_inputs,'Data');
        handles.edit_output_name_string = strcat(handles.source,'_',...
            handles.user_input_data(1,2),'_',...
            handles.user_input_data(2,2),'_',...
            handles.user_input_data(3,2),'.mat');
        set(edit_name_string,'Enable','on');
        set(edit_name_string,'String',handles.edit_output_name_string);
        set(edit_name_string,'Enable','inactive');
        guidata(figure_main,handles);
    end
%%  Callback function when any of button group "Dataset source" is push
    function buttongroup_source_SelectionChangeFcn(hObject, eventdata)
        handles = guidata(figure_main);
        switch get(eventdata.NewValue,'String') % Get String of selected object.
            case 'URIS'
                handles.source = 'URIS';
            case 'BCI IV'
                handles.source = 'BCI4';
            case 'BCI III'
                handles.source = 'BCI3';
            otherwise
        end
        handles.user_input_data = get(table_user_inputs,'Data');
        handles.edit_output_name_string = strcat(handles.source,'_',...
            handles.user_input_data(1,2),'_',...
            handles.user_input_data(2,2),'_',...
            handles.user_input_data(3,2),'.mat');
        set(edit_name_string,'Enable','on');
        set(edit_name_string,'String',handles.edit_output_name_string);
        set(edit_name_string,'Enable','inactive');
        guidata(figure_main,handles);
    end
%%  Callback function when pushbutton "Load" is pushed
    function pushbutton_load_CallbackFcn(hObject, eventdata)
        set(pushbutton_load,'Enable','off');
        handles = guidata(figure_main);
        file = uigetfile('*.mat');
        if ~isequal(file, 0)
            handles.dataset = load(file);
            handles.eeg.information = acquisition_info(handles.dataset.mrk,...
                handles.dataset.nfo,...
                handles.source);
            handles.table_output_data = [ {'Sampling frequency(Hz)'},{[handles.eeg.information.fs]},{[]};...
                {'Class label'},{[handles.eeg.information.class{1,1}]},{[handles.eeg.information.class{1,2}]};...
                {'Number of class output(trial)'},{[handles.eeg.information.class{2,1}]},{[handles.eeg.information.class{2,2}]};...
                {'Number of electrodes(unit)'},{length([handles.eeg.information.clab])},{[]}];
            set(table_properties,'Data',handles.table_output_data);
        end
        guidata(figure_main,handles);
        set(pushbutton_process,'Enable','on');        
    end
%%  Callback function when pushbutton "Process" is pushed
    function pushbutton_process_CallbackFcn(hObject, eventdata)
        set(pushbutton_process,'Enable','off');
        handles = guidata(figure_main);
        handles.eeg.eeg_matrix = acquisition_signal(handles.dataset.cnt,handles.source);
        guidata(figure_main,handles);
        set(pushbutton_save,'Enable','on');          
    end
%%  Callback function when pushbutton "Save" is pushed
    function pushbutton_save_Callback(hObject,eventdata)  
        set(pushbutton_save,'Enable','off');
        handles = guidata(figure_main);
        eeg_matrix  = handles.eeg.eeg_matrix;
        eeg_info    = handles.eeg.information;
        save_name   = handles.edit_output_name_string{1,1};
        save(save_name,'eeg_matrix','eeg_info');        
        clear(' eeg_matrix ','eeg_info','save_name','handles.dataset','handles.eeg');          
        guidata(figure_main,handles);
        set(pushbutton_load,'Enable','on');      
    end

end
% -------------------------------------------------------------------------
